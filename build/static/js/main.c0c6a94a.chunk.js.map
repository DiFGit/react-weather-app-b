{"version":3,"sources":["DateAndTime.js","MainData.js","ForecastDisplay.js","Forecast.js","MoreInfo.js","CityImage.js","App.js","serviceWorker.js","index.js"],"names":["DateandTime","props","date","Date","data","weekday","getDay","hour","getHours","minutes","getMinutes","MainData","className","time","city","description","alt","src","iconUrl","temperature","tempMax","tempMin","ForecastDisplay","forecastDays","fourDayForecast","map","day","timestamp","formatForecastDay","dt","timezone","weather","icon","Math","round","max","main","temp_max","min","temp_min","Forecast","forecast","forecastData","list","slice","units","type","color","height","width","timeout","MoreInfo","weatherData","useState","ready","setForecastData","handleForecastResponse","response","name","mainWeather","useEffect","apiForecastUrl","axios","get","then","precipitation","rain","classeName","windSpeed","windSpeedUnits","humidity","pressure","CityImage","imageUrl","setImageUrl","handleErrors","displayCityImage","photos","portrait","console","log","currentLocation","method","url","headers","Authorization","catch","App","setCity","input","setInput","setWeatherData","setUnits","fahrenheit","setFahrenheit","celsius","setCelsius","setWindSpeedUnits","detailsClassName","setDetailsClassName","forecastClassName","setForecastClassName","details","setDetails","setForecast","setCurrentLocation","handleResponse","temp","wind","speed","getLocalData","position","currentPosition","coords","latitude","longitude","weatherApiUrl","onSubmit","event","preventDefault","placeholder","autoComplete","onChange","target","value","onClick","navigator","geolocation","getCurrentPosition","href","role","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c0c6a94a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function DateandTime(props) {\r\n  let date = new Date(props.data);\r\n  let day = date.getDay();\r\n  let days = [\r\n    \"sunday\",\r\n    \"monday\",\r\n    \"tuesday\",\r\n    \"wednesday\",\r\n    \"thursday\",\r\n    \"friday\",\r\n    \"saturday\"\r\n  ];\r\n  let weekday = days[day];\r\n  let hour = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  if (minutes < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n\r\n  return (\r\n    <small>\r\n      {weekday}, {hour}:{minutes}{\" \"}\r\n    </small>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DateAndTime from \"./DateAndTime\";\r\n\r\nexport default function MainData(props) {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-4 left-data\">\r\n        <div className=\"day-hour\">\r\n          {\" \"}\r\n          <DateAndTime data={props.data.time} />\r\n        </div>\r\n        <h4 className=\"location\">\r\n          <small>{props.data.city}</small>\r\n        </h4>\r\n        <div className=\"weather-description\">\r\n          <small>{props.data.description}</small>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-4 current-weather\">\r\n        <img alt=\"\" src={props.data.iconUrl} className=\"weather-icon\" />\r\n      </div>\r\n      <div className=\"col-4 current-temperature-data\">\r\n        <div className=\"current-temperature\">\r\n          <strong className=\"current-temperature-element\">\r\n            {props.data.temperature}º\r\n          </strong>\r\n        </div>\r\n        <div className=\"temp-max-min\">\r\n          {props.data.tempMax}º/{props.data.tempMin}º\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ForecastDisplay(props) {\r\n  let forecastDays = props.fourDayForecast;\r\n\r\n  function formatForecastDay(timestamp) {\r\n    let date = new Date(timestamp);\r\n    let day = date.getDay();\r\n    let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n    let forecastWeekDay = days[day];\r\n    return `${forecastWeekDay}`;\r\n  }\r\n  return (\r\n    <div className=\"container forecast-display\">\r\n      {forecastDays.map((day) => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <small>\r\n                {formatForecastDay(\r\n                  day[0].dt * 1000 - props.data.city.timezone * 1000\r\n                )}\r\n              </small>\r\n            </div>\r\n            <div className=\"col\">\r\n              <img\r\n                src={`http://openweathermap.org/img/wn/${day[0].weather[0].icon}@2x.png`}\r\n                className=\"forecast-icon\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <small>\r\n                {Math.round(Math.max(...day.map((day) => day.main.temp_max)))}º\r\n                / {Math.round(Math.min(...day.map((day) => day.main.temp_min)))}\r\n                º\r\n              </small>\r\n            </div>\r\n            <div className=\"w-100\"></div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ForecastDisplay from \"./ForecastDisplay\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Forecast(props) {\r\n  let forecast = props.forecastData.data;\r\n  let date = new Date(\r\n    props.forecastData.date * 1000 + props.forecastData.timezone * 1000\r\n  );\r\n  let hour = date.getHours();\r\n\r\n  if (hour === 21) {\r\n    let day1 = forecast.list.slice(1, 8);\r\n    let day2 = forecast.list.slice(9, 16);\r\n    let day3 = forecast.list.slice(17, 24);\r\n    let day4 = forecast.list.slice(25, 32);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 0 && hour < 3) {\r\n    let day1 = forecast.list.slice(8, 15);\r\n    let day2 = forecast.list.slice(16, 23);\r\n    let day3 = forecast.list.slice(24, 31);\r\n    let day4 = forecast.list.slice(32, 39);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 3 && hour < 6) {\r\n    let day1 = forecast.list.slice(7, 14);\r\n    let day2 = forecast.list.slice(15, 22);\r\n    let day3 = forecast.list.slice(23, 30);\r\n    let day4 = forecast.list.slice(31, 38);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 6 && hour < 9) {\r\n    let day1 = forecast.list.slice(6, 13);\r\n    let day2 = forecast.list.slice(14, 21);\r\n    let day3 = forecast.list.slice(22, 29);\r\n    let day4 = forecast.list.slice(30, 37);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 9 && hour < 12) {\r\n    let day1 = forecast.list.slice(5, 12);\r\n    let day2 = forecast.list.slice(13, 20);\r\n    let day3 = forecast.list.slice(21, 28);\r\n    let day4 = forecast.list.slice(29, 36);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 12 && hour < 15) {\r\n    let day1 = forecast.list.slice(4, 11);\r\n    let day2 = forecast.list.slice(12, 19);\r\n    let day3 = forecast.list.slice(20, 27);\r\n    let day4 = forecast.list.slice(28, 35);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 15 && hour < 18) {\r\n    let day1 = forecast.list.slice(3, 10);\r\n    let day2 = forecast.list.slice(11, 18);\r\n    let day3 = forecast.list.slice(19, 26);\r\n    let day4 = forecast.list.slice(27, 34);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n  if ((hour) => 18 && hour < 21) {\r\n    let day1 = forecast.list.slice(2, 9);\r\n    let day2 = forecast.list.slice(10, 16);\r\n    let day3 = forecast.list.slice(18, 25);\r\n    let day4 = forecast.list.slice(26, 35);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  }\r\n\r\n  if ((hour) => 21 && hour < 24) {\r\n    let day1 = forecast.list.slice(1, 8);\r\n    let day2 = forecast.list.slice(9, 15);\r\n    let day3 = forecast.list.slice(17, 24);\r\n    let day4 = forecast.list.slice(25, 34);\r\n    let fourDayForecast = [day1, day2, day3, day4];\r\n    return (\r\n      <ForecastDisplay\r\n        fourDayForecast={fourDayForecast}\r\n        data={forecast}\r\n        units={props.units}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n        className=\"loader\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MoreInfo(props) {\r\n  const data = props.weatherData;\r\n  let [forecastData, setForecastData] = useState({ ready: false });\r\n\r\n  function handleForecastResponse(response) {\r\n    setForecastData({\r\n      data: response.data,\r\n      city: response.data.city.name,\r\n      date: response.data.list[0].dt,\r\n      timezone: response.data.city.timezone,\r\n      mainWeather: response.data.list[0].weather[0].main,\r\n      ready: true,\r\n    });\r\n  }\r\n\r\n  useEffect(\r\n    function getForecastData() {\r\n      const apiKey = \"1c79a9c19394dbdbf78cd6d4344cc928\";\r\n      const apiUrl = `https://api.openweathermap.org/data/2.5/`;\r\n      let apiForecastUrl = `${apiUrl}forecast?q=${data.city}&appid=${apiKey}&units=${props.units}`;\r\n      axios.get(apiForecastUrl).then(handleForecastResponse);\r\n    },\r\n    [data.city, props.units]\r\n  );\r\n\r\n  if (props.forecast && forecastData.city === data.city) {\r\n    return (\r\n      <Forecast\r\n        forecastData={forecastData}\r\n        weatherData={data}\r\n        units={props.units}\r\n      />\r\n    );\r\n  } else {\r\n    if (forecastData.mainWeather === \"Rain\") {\r\n      let precipitation = forecastData.data.list[0].rain[\"3h\"];\r\n      return (\r\n        <div classeName=\"moreInfo\">\r\n          <ul className=\"weather-details\">\r\n            <li>\r\n              Wind: <span className=\"wind-speed\" />\r\n              <span className=\"wind-units\" /> {data.windSpeed}\r\n              {props.windSpeedUnits}\r\n            </li>\r\n            <li>\r\n              Humidity: <span className=\"humidity\" />\r\n              {data.humidity}%\r\n            </li>\r\n            <li>\r\n              Precipitation: <span className=\"pressure\" />\r\n              {precipitation}mm\r\n            </li>\r\n            <li>\r\n              Pressure: <span className=\"pressure\" />\r\n              {data.pressure}mb\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div classeName=\"moreInfo\">\r\n          <ul className=\"weather-details\">\r\n            <li>\r\n              Wind: <span className=\"wind-speed\" />\r\n              <span className=\"wind-units\" /> {data.windSpeed}\r\n              {props.windSpeedUnits}\r\n            </li>\r\n            <li>\r\n              Humidity: <span className=\"humidity\" />\r\n              {data.humidity}%\r\n            </li>\r\n            <li>\r\n              Precipitation: <span className=\"pressure\" />\r\n              00mm\r\n            </li>\r\n            <li>\r\n              Pressure: <span className=\"pressure\" />\r\n              {data.pressure}mb\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CityImage(props) {\r\n  let [imageUrl, setImageUrl] = useState(null);\r\n  console.log(props.currentLocation);\r\n\r\n  function handleErrors() {\r\n    setImageUrl(\r\n      \"https://images.pexels.com/photos/1078850/pexels-photo-1078850.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    );\r\n  }\r\n\r\n  function displayCityImage(response) {\r\n    setImageUrl(response.data.photos[3].src.portrait);\r\n  }\r\n\r\n  useEffect(\r\n    function getCityImage() {\r\n      axios({\r\n        method: \"get\",\r\n        url: `https://api.pexels.com/v1/search?query=${props.city}+query&per_page=15&page=1`,\r\n        headers: {\r\n          Authorization:\r\n            \"563492ad6f91700001000001f466afaf7aa641ac972d98d7545e9bfa\",\r\n        },\r\n      })\r\n        .then(displayCityImage)\r\n        .catch(handleErrors);\r\n    },\r\n    [props.city]\r\n  );\r\n\r\n  if (props.currentLocation) {\r\n    return (\r\n      <img\r\n        alt=\"\"\r\n        src=\"https://images.pexels.com/photos/1078850/pexels-photo-1078850.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        className=\"city-image card border-light\"\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <img alt=\"\" src={imageUrl} className=\"city-image card border-light\" />\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MainData from \"./MainData\";\r\nimport MoreInfo from \"./MoreInfo\";\r\nimport \"./App.css\";\r\nimport CityImage from \"./CityImage\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function App() {\r\n  const [city, setCity] = useState(\"Lisbon\");\r\n  const [input, setInput] = useState(\"null\");\r\n  const [weatherData, setWeatherData] = useState({ ready: false });\r\n  const [units, setUnits] = useState(\"metric\");\r\n  const [fahrenheit, setFahrenheit] = useState(\r\n    \"btn btn-lg units inactive fahrenheit\"\r\n  );\r\n  const [celsius, setCelsius] = useState(\"btn btn-lg units active celsius\");\r\n  const [windSpeedUnits, setWindSpeedUnits] = useState(\"m/s\");\r\n  const [detailsClassName, setDetailsClassName] = useState(\r\n    \"btn btn-light btn-sm details disabled\"\r\n  );\r\n  const [forecastClassName, setForecastClassName] = useState(\r\n    \"btn btn-light btn-sm forecast\"\r\n  );\r\n  const [details, setDetails] = useState(true);\r\n  const [forecast, setForecast] = useState(false);\r\n  const [currentLocation, setCurrentLocation] = useState(false);\r\n\r\n  function displayForecast(event) {\r\n    event.preventDefault();\r\n    setForecastClassName(\"btn btn-light btn-sm details disabled\");\r\n    setDetailsClassName(\"btn btn-light btn-sm forecast\");\r\n    setForecast(true);\r\n    setDetails(false);\r\n  }\r\n\r\n  function displayDetails(event) {\r\n    event.preventDefault();\r\n    setForecastClassName(\"btn btn-light btn-sm forecast\");\r\n    setDetailsClassName(\"btn btn-light btn-sm details disabled\");\r\n    setForecast(false);\r\n    setDetails(true);\r\n  }\r\n\r\n  function displayImperialUnits(event) {\r\n    event.preventDefault();\r\n    setUnits(\"imperial\");\r\n    setFahrenheit(\"btn btn-lg units active fahrenheit\");\r\n    setCelsius(\"btn btn-lg units inactive celsius\");\r\n    setWindSpeedUnits(\"mph\");\r\n  }\r\n\r\n  function displayMetricUnits(event) {\r\n    event.preventDefault();\r\n    setUnits(\"metric\");\r\n    setFahrenheit(\"btn btn-lg units inactive fahrenheit\");\r\n    setCelsius(\"btn btn-lg units active celsius\");\r\n    setWindSpeedUnits(\"m/s\");\r\n  }\r\n\r\n  function handleResponse(response) {\r\n    setWeatherData({\r\n      iconUrl: `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\r\n      temperature: Math.round(response.data.main.temp),\r\n      tempMax: Math.round(response.data.main.temp_max),\r\n      tempMin: Math.round(response.data.main.temp_min),\r\n      pressure: response.data.main.pressure,\r\n      humidity: response.data.main.humidity,\r\n      description: response.data.weather[0].description,\r\n      windSpeed: response.data.wind.speed,\r\n      city: response.data.name,\r\n      time:\r\n        response.data.dt * 1000 + response.data.timezone * 1000 - 3600 * 1000,\r\n      ready: true,\r\n    });\r\n  }\r\n\r\n  useEffect(\r\n    function getCityData() {\r\n      const apiKey = \"1c79a9c19394dbdbf78cd6d4344cc928\";\r\n      const apiUrl = `https://api.openweathermap.org/data/2.5/`;\r\n      let weatherApiUrl = `${apiUrl}weather?q=${city}&appid=${apiKey}&units=${units}`;\r\n      axios.get(weatherApiUrl).then(handleResponse);\r\n      setCurrentLocation(false);\r\n    },\r\n    [city, units]\r\n  );\r\n\r\n  function getLocalData(position) {\r\n    let currentPosition = `lat=${position.coords.latitude}&lon=${position.coords.longitude}`;\r\n    const apiKey = \"1c79a9c19394dbdbf78cd6d4344cc928\";\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/`;\r\n    let weatherApiUrl = `${apiUrl}weather?${currentPosition}&appid=${apiKey}&units=metric`;\r\n    axios.get(weatherApiUrl).then(handleResponse);\r\n    setCurrentLocation(true);\r\n  }\r\n\r\n  function readInput(event) {\r\n    event.preventDefault();\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  function updateCity(event) {\r\n    event.preventDefault();\r\n    setCity(input);\r\n  }\r\n\r\n  function getCurrentLocation() {\r\n    navigator.geolocation.getCurrentPosition(getLocalData);\r\n  }\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"card text-white\">\r\n          <div className=\"card-overlay\">\r\n            <div className=\"row clearfix\">\r\n              <div className=\"form-group col-12 mt-1\">\r\n                <form className=\"form-inline search-form\" onSubmit={updateCity}>\r\n                  <input\r\n                    type=\"search\"\r\n                    placeholder=\"Enter city\"\r\n                    autoComplete=\"off\"\r\n                    className=\"col-5 mr-2 search-engine\"\r\n                    onChange={readInput}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"🔍\"\r\n                    className=\"btn btn-sm search-glass\"\r\n                  />\r\n                  <div className=\"icon local-icon\">\r\n                    <button\r\n                      className=\"col-2 mr-3 btn btn-sm current-location\"\r\n                      onClick={getCurrentLocation}\r\n                    >\r\n                      <i className=\"fas fa-map-marker-alt local-icon\" />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-3 temperature-units\">\r\n                    <a\r\n                      href=\"/\"\r\n                      className={celsius}\r\n                      onClick={displayMetricUnits}\r\n                    >\r\n                      C\r\n                    </a>\r\n                    |\r\n                    <a\r\n                      href=\"/\"\r\n                      className={fahrenheit}\r\n                      onClick={displayImperialUnits}\r\n                    >\r\n                      F\r\n                    </a>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <MainData data={weatherData} units={units} />\r\n            <div className=\"row lower-end\">\r\n              <div className=\"col-6 city-image\">\r\n                <CityImage city={city} currentLocation={currentLocation} />\r\n              </div>\r\n              <div className=\"col-6 choose-buttons\">\r\n                <div className=\"btn-group\" role=\"group\">\r\n                  <input\r\n                    type=\"button\"\r\n                    className={detailsClassName}\r\n                    value=\" Details \"\r\n                    onClick={displayDetails}\r\n                  />\r\n                  <input\r\n                    type=\"button\"\r\n                    className={forecastClassName}\r\n                    value=\" Forecast \"\r\n                    onClick={displayForecast}\r\n                  />\r\n                </div>\r\n                <MoreInfo\r\n                  weatherData={weatherData}\r\n                  windSpeedUnits={windSpeedUnits}\r\n                  details={details}\r\n                  forecast={forecast}\r\n                  units={units}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"links\">\r\n              <small className=\"pexels-link\">\r\n                Photo provided by{\" \"}\r\n                <a\r\n                  href=\"https://www.pexels.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Pexels\r\n                </a>\r\n              </small>\r\n              <small className=\"github-link\">\r\n                <a\r\n                  href=\"https://github.com/DiFGit/react-weather-app-b\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Open-source code\r\n                </a>{\" \"}\r\n                by Diana Ferreira\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000} //3 secs\r\n        className=\"loader\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}